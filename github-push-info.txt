## التزامات وتغييرات الـ Git
آخر 3 التزامات:
cb25cc9 - Add GitHub Actions workflow for automated deployment and add Render.com deployment support. (3 minutes ago)
4ace899 - Deploy application to GitHub (9 minutes ago)
1df641c - إضافة دعم النشر على Render.com (10 minutes ago)

## الملفات الرئيسية المضافة/المعدلة:
- start.js
- render.yaml
- RENDER_DEPLOYMENT_GUIDE.md
- deploy/check_database.js
- deploy/prepare_for_render.sh

### start.js:
/**
 * ملف تشغيل البدء لبيئة الإنتاج
 * 
 * يتم استخدام هذا الملف عند تشغيل التطبيق على Render.com
 * بدلاً من تشغيل الخادم مباشرة
 */

const { exec } = require('child_process');
const path = require('path');
const fs = require('fs');

// تحقق من وجود ملفات مجمعة المشروع
const distPath = path.join(__dirname, 'dist');
const distExists = fs.existsSync(distPath);

if (!distExists) {
  console.log('البناء غير موجود، جارٍ بناء المشروع...');
  
  // تنفيذ أمر البناء
  exec('npm run build', (error, stdout, stderr) => {
    if (error) {
      console.error(`خطأ في البناء: ${error}`);
      return;
    }
    
    console.log(`نتيجة البناء: ${stdout}`);
    
    if (stderr) {
      console.error(`أخطاء البناء: ${stderr}`);
    }
    
    // بعد اكتمال البناء، شغّل الخادم
    startServer();
  });
} else {
  // إذا كان البناء موجودًا بالفعل، شغّل الخادم مباشرة
  startServer();
}

// وظيفة لتشغيل الخادم
function startServer() {
  console.log('بدء تشغيل الخادم...');
  
  // استيراد ملف الخادم الرئيسي
  require('./dist/server/index.js');
  
  console.log(`الخادم يعمل على المنفذ ${process.env.PORT || 3000}`);
}

### render.yaml:
services:
  - type: web
    name: butter-bakery
    env: node
    plan: starter
    buildCommand: npm install
    startCommand: npm start
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 5000
      - key: DATABASE_URL
        fromDatabase:
          name: butter-bakery-db
          property: connectionString
    
databases:
  - name: butter-bakery-db
    plan: starter
    postgresMajorVersion: 15

### RENDER_DEPLOYMENT_GUIDE.md (جزء):
# دليل نشر تطبيق مخبز الزبدة على Render.com

هذا الدليل يشرح خطوات نشر التطبيق على منصة Render.com باستخدام ملف الضغط المُعد.

## المتطلبات المسبقة

1. حساب على منصة [Render.com](https://render.com)
2. ملف الضغط الخاص بالتطبيق: `butter-bakery-20250322_024537.zip` (أو أحدث إصدار)

## خطوات النشر

### 1. إنشاء قاعدة البيانات

1. قم بتسجيل الدخول إلى [لوحة تحكم Render.com](https://dashboard.render.com)
2. انقر على "New" ثم اختر "PostgreSQL"
3. قم بتعبئة المعلومات التالية:
   - **Name**: `butter-bakery-db`
   - **Database**: `butter_bakery_db`
   - **User**: اترك القيمة الافتراضية
   - **Region**: اختر المنطقة الأقرب لمستخدمي التطبيق
   - **PostgreSQL Version**: اختر الإصدار 15
   - **Plan Type**: اختر الخطة المناسبة (Starter للبيئة التجريبية)
4. انقر على "Create Database"
5. انتظر حتى تكتمل عملية إنشاء قاعدة البيانات (قد تستغرق بضع دقائق)
6. بعد اكتمال الإنشاء، احفظ معلومات الاتصال التالية:
   - **Internal Database URL**: سيتم استخدامه لاحقًا
   - **External Database URL**: للاتصال من خارج شبكة Render

### 2. نشر تطبيق الويب



### deploy/check_database.js (جزء):
/**
 * أداة للتحقق من صحة الاتصال بقاعدة البيانات
 * 
 * يمكن تشغيل هذا الملف عبر:
 * node deploy/check_database.js
 * 
 * يقوم هذا السكريبت بالتحقق من:
 * - صحة الاتصال بقاعدة البيانات
 * - قائمة الجداول الموجودة
 * - عدد الصفوف في كل جدول
 */

const { Client } = require('pg');

async function main() {
  console.log('جاري التحقق من صحة الاتصال بقاعدة البيانات...');
  
  // قراءة رابط قاعدة البيانات من متغيرات البيئة
  const databaseUrl = process.env.DATABASE_URL;
  


### deploy/prepare_for_render.sh (جزء):
#!/bin/bash

# سكريبت لتجهيز نسخة النشر لـ Render.com

echo "جاري تجهيز مشروع ButterBakery-OP للنشر على Render.com..."

# إنشاء مجلد مؤقت
TEMP_DIR="$(pwd)/deploy/temp_bundle"
mkdir -p $TEMP_DIR

# تحديد المسار الرئيسي للمشروع
REPO_DIR="/home/runner/workspace"
echo "المسار الرئيسي للمشروع: $REPO_DIR"
echo "نسخ ملفات المشروع..."

# استخدام المسار المطلق للمجلدات الرئيسية
for dir in $REPO_DIR/client $REPO_DIR/server $REPO_DIR/shared $REPO_DIR/public; do
  DIR_NAME=$(basename "$dir")
  if [ -d "$dir" ]; then
    cp -r "$dir" "$TEMP_DIR/"
